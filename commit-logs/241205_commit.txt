3:I[9275,[],""]
5:I[1343,[],""]
6:I[5767,["231","static/chunks/231-6a7b6dfd7bcbf59a.js","185","static/chunks/app/layout-c9173ec0898b2734.js"],"PostProvider",1]
7:I[231,["231","static/chunks/231-6a7b6dfd7bcbf59a.js","185","static/chunks/app/layout-c9173ec0898b2734.js"],""]
4:["slug","241205_commit","d"]
0:["ZLfEGPF44wSU_S0CUUew-",[[["",{"children":["commit-logs",{"children":[["slug","241205_commit","d"],{"children":["__PAGE__?{\"slug\":\"241205_commit\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["commit-logs",{"children":[["slug","241205_commit","d"],{"children":["__PAGE__",{},[["$L1","$L2",null],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","commit-logs","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","commit-logs","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ec8169d84bc91095.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","$L6",null,{"children":["$","body",null,{"children":[["$","nav",null,{"className":"font-mono mx-16","children":["$","ul",null,{"className":"relative min-h-32 mt-14 mb-10 mx-2 sm:mx-12 lg:mx-14 flex flex-col md:flex-row md:space-x-12 lg:space-x-16 space-y-1 md:space-y-0 justify-center md:justify-start items-start sm:items-center md:items-center text-2xl md:text-3xl z-0 tracking-tight text-zinc-900 pl-4 sm:pl-0","children":[["$","li",null,{"children":["$","$L7",null,{"href":"/","children":"Home"}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/learning-logs","children":"Learning Logs"}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/commit-logs","children":"Commit Logs"}]}]]}]}],["$","div",null,{"className":"flex justify-center py-10","children":["$","div",null,{"className":"page-background","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}]}]]}]}]}]],null],null],[null,"$L8"]]]]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Spaceofin Logs"}],["$","meta","3",{"name":"description","content":"A blog for study logs"}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"256x256"}]]
1:null
2:["$","div",null,{"className":"flex flex-col prose dark:prose-invert w-full h-full max-h-none overflow-visible px-4","children":[["$","h1",null,{"className":"my-20 text-4xl","children":"memo editing 기능 구현하기"}],"\n",["$","p",null,{"children":["생성된 메모의 ",["$","code",null,{"children":"title"}],"이나 ",["$","code",null,{"children":"description"}],"을 수정 후 다시 db에 저장하는 기능을 구현하려고 합니다."]}],"\n",["$","h2",null,{"className":"mt-20 text-3xl text-blue-900","children":"Dynamic routes를 이용한 memo edit 페이지 생성"}],"\n",["$","p",null,{"children":["각 메모별 별도의 edit 페이지를 가지게 하기 위해 dynamic route 를 이용합니다.\n메모 수정 작업은 ",["$","code",null,{"children":"/memos/[id]/edit"}]," 페이지에서 수행되며, ",["$","code",null,{"children":"[id]"}]," 부분 즉, ",["$","code",null,{"children":"dynamic segments"}]," 부분은 ",["$","code",null,{"children":"build time"}],"에 채워넣어 집니다."]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"params"}]," prop은 ",["$","code",null,{"children":"Promise"}]," 입니다. 따라서 ",["$","code",null,{"children":"async/await"}]," 를 사용해야 합니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"// memo-board/src/app/memos/[id]/edit/page.tsx\n\nimport { db } from \"@/app/db\";\nimport { notFound } from \"next/navigation\";\nimport MemoEditSection from \"./memo-edit-section\";\n\nexport default async function MemoEdit({\n  params,\n}: {\n  params: Promise<{ id: string }>;\n}) {\n  const { id } = await params;\n  const memo = await db.memo.findFirst({\n    where: { id: parseInt(id) },\n  });\n  if (!memo) return notFound();\n  \n  return <MemoEditSection memo={memo} />;\n}\n"}]}],"\n",["$","p",null,{"children":["각 페이지마다 해당 메모 데이터를 prop으로 가지는 ",["$","code",null,{"children":"MemoEditSection"}]," 컴포넌트를 리턴합니다."]}],"\n",["$","h3",null,{"className":"text-2xl dark:text-2xl text-sky-700 dark:text-sky-300","children":"generateStaticParams 정의하기"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"dynamic route segment"}],"와 함께 ",["$","code",null,{"children":"generateStaticParams"}],"를 사용하면 ",["$","code",null,{"children":"build time"}],"에 정적으로 routes를 생성할 수 있습니다.(statically generate)"]}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"// memo-board/src/app/memos/[id]/edit/page.tsx\n...\nexport async function generateStaticParams() {\n  const memos = await db.memo.findMany();\n  return memos.map((memo) => ({\n    id: memo.id.toString();\n  }));\n}\n...\n"}]}],"\n",["$","h2",null,{"className":"mt-20 text-3xl text-blue-900","children":"editMemo 서버 액션(server action) 구현"}],"\n",["$","p",null,{"children":["클라이언트 컴포넌트 내에서 호출하기 위해 ",["$","code",null,{"children":"server action"}],"으로 ",["$","code",null,{"children":"editMemo"}]," 함수를 구현합니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"\"use server\";\n\nimport { db } from \"../db\";\nimport { redirect } from \"next/navigation\";\n\n...\n\nexport async function editMemo(id: number, title: string, content: string) {\n  await db.memo.update({\n    where: { id },\n    data: { title, content },\n  });\n  \n  redirect(\"/\");\n}\n"}]}],"\n",["$","h3",null,{"className":"text-2xl dark:text-2xl text-sky-700 dark:text-sky-300","children":"클라이언트 컴포넌트 내 서버 액션 사용"}],"\n",["$","p",null,{"children":["실질적으로 메모 수정 작업을 진행할 ",["$","code",null,{"children":"MemoEditSection"}]," 클라이언트 컴포넌트입니다."]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"title"}],"과 ",["$","code",null,{"children":"content"}],"를 상태변수로 관리하며 초기값으로 기존 메모의 텍스트를 할당하고 수정을 마친 후 Done 버튼을 클릭하면 ",["$","code",null,{"children":"editMemo"}]," 서버 액션 실행을 포함하는 handleEditDoneClick 함수가 실행됩니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"// memo-board/src/app/memos/[id]/edit/memo-edit-section.tsx\n\"use client\";\n\nimport { editMemo } from \"@/app/service/memosServies\";\nimport { useState } from \"react\";\n\ntype memoProps = {\n  id: number;\n  title: string;\n  content: string;\n};\n\nexport default function MemoEditSection({ memo }: { memo: memoProps }) {\n  const [title, setTitle] = useState(memo.title);\n  const [content, setContent] = useState(memo.content);\n  \n  const handleEditDoneClick = async () => {\n    try {\n      await editMemo(memo.id, title, content);\n    } catch (error) {\n      console.error(\"Error editing memo:\", error);\n    }\n  };\n\n  return ( \n\t  ... \n\t)\n}\n"}]}],"\n",["$","h2",null,{"className":"mt-20 text-3xl text-blue-900","children":"reference"}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"https://nextjs.org/docs/app/building-your-application/routing/dynamic-routes\nhttps://nextjs.org/docs/app/api-reference/functions/generate-static-params\n"}]}]]}]
