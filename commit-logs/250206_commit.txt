3:I[9275,[],""]
5:I[1343,[],""]
6:I[5767,["231","static/chunks/231-6a7b6dfd7bcbf59a.js","185","static/chunks/app/layout-9e882b25b1c0b5ce.js"],"PostProvider",1]
7:I[231,["231","static/chunks/231-6a7b6dfd7bcbf59a.js","185","static/chunks/app/layout-9e882b25b1c0b5ce.js"],""]
4:["slug","250206_commit","d"]
0:["JgzHrwONyg1XFgM-2Xm2j",[[["",{"children":["commit-logs",{"children":[["slug","250206_commit","d"],{"children":["__PAGE__?{\"slug\":\"250206_commit\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["commit-logs",{"children":[["slug","250206_commit","d"],{"children":["__PAGE__",{},[["$L1","$L2",null],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","commit-logs","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","commit-logs","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/90b5dcf7fd332b75.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","$L6",null,{"children":["$","body",null,{"className":"__variable_1e4310 __variable_c3aa02 antialiased","children":[["$","nav",null,{"className":"font-mono mx-16","children":["$","ul",null,{"className":"relative min-h-32 m-14 mb-10 flex flex-col md:flex-row md:space-x-12 space-y-1 justify-center md:justify-start items-center text-2xl md:text-3xl z-0 tracking-tight text-zinc-900","children":[["$","li",null,{"children":["$","$L7",null,{"href":"/","children":"Home"}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/learning-logs","children":"Learning Logs"}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/commit-logs","children":"Commit logs"}]}]]}]}],["$","div",null,{"className":"flex justify-center py-10","children":["$","div",null,{"className":"page-background","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}]}]]}]}]}]],null],null],[null,"$L8"]]]]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Create Next App"}],["$","meta","3",{"name":"description","content":"Generated by create next app"}]]
1:null
2:["$","div",null,{"className":"flex flex-col prose dark:prose-invert w-full h-full max-h-none overflow-visible px-4","children":[["$","h1",null,{"className":"my-20 text-4xl","children":"prisma schema model 수정하기"}],"\n",["$","h3",null,{"className":"text-2xl dark:text-2xl text-sky-700 dark:text-sky-300","children":"model 수정하기"}],"\n",["$","p",null,{"children":["기존 Memo model에는 ",["$","code",null,{"children":"isPublic"}]," 이라는 boolean 타입의 field가 포함되어 있었습니다."]}],"\n",["$","p",null,{"children":["초기 ",["$","code",null,{"children":"memo-board"}]," 앱에는 Group model 없었고 메모는 ",["$","code",null,{"children":"public/private"}]," 두 가지 타입만 존재했기에 ",["$","code",null,{"children":"isPublic"}]," 필드로 데이터를 표현하기에 충분했습니다."]}],"\n",["$","p",null,{"children":["하지만 Group model을 추가하고 난 후에는 해당 그룹에 속하는 그룹원들에게만 보이는 메모 타입이 필요해졌습니다. ",["$","code",null,{"children":"isPublic"}],"  필드 대신 ",["$","code",null,{"children":"public/private/group"}],"으로 구분하는 새로운 필드를 사용하기로 합니다."]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"PUBLIC/PRIVATE/GROUP"}]," 으로 정의된 Visibility 라는 ",["$","code",null,{"children":"enum"}]," 타입을 추가하고 Memo model에 ",["$","code",null,{"children":"isPublic"}]," field 대신 Visibility 타입의 ",["$","code",null,{"children":"visibility"}]," 필드를 추가합니다. 기본값은 ",["$","code",null,{"children":"PRIVATE"}],"으로 주었습니다."]}],"\n",["$","p",null,{"children":["(수정 전 Memo model)\n",["$","img",null,{"className":"mt-1 mb-8","src":"https://mizcysqzabsegohkcjcx.supabase.co/storage/v1/object/public/posts/commit-logs/images/F49302A7-9FFC-46F7-8EC3-B5FA9264F0E0.png","alt":""}]]}],"\n",["$","p",null,{"children":["(수정 후 Memo model)\n",["$","img",null,{"className":"mt-1 mb-8","src":"https://mizcysqzabsegohkcjcx.supabase.co/storage/v1/object/public/posts/commit-logs/images/EBA8473B-F750-4E67-81B6-3ADBAD2F590E.png","alt":""}]]}],"\n",["$","h3",null,{"className":"text-2xl dark:text-2xl text-sky-700 dark:text-sky-300","children":"바뀐 model에 맞도록 코드 수정하기"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"memo.isPublic"}],"의 boolean 값으로 조건 검사를 하던 코드는 ",["$","code",null,{"children":"memo.visibility === Visibility.Public"}],"으로 수정합니다."]}],"\n",["$","p",null,{"children":["form을 이용해 memo를 create하던 코드는 form에 visibility 항목을 추가하고, memo를 edit하던 코드에도 ",["$","code",null,{"children":"isPublic"}]," 을 ",["$","code",null,{"children":"visibility"}],"로 치환하여 함수를 dispatch 합니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"const handleSubmit = async (e: FormEvent) => {\n\t...\n\tconst visibility =\n\t  selectedGroups.length > 0\n\t\t? Visibility.GROUP\n\t\t: formData.get(\"isPublic\") === \"on\"\n\t\t? Visibility.PUBLIC\n\t\t: Visibility.PRIVATE;\n\tformData.append(\"visibility\", visibility);\n\t...\n\tconst result = await dispatch(createMemo({ formData, groupIdsForMemo }));\n}));\n"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"const handleSubmit = async (e: FormEvent) => {\n\t...\n\tconst visibility =\n\t\tmemo.visibility === Visibility.GROUP\n\t\t? Visibility.GROUP\n\t\t: isPublic\n\t\t? Visibility.PUBLIC\n\t\t: Visibility.PRIVATE;\n\t\tdispatch(editMemo({ id: memo.id, title, content, visibility }));\n\t...\n}\n"}]}],"\n",["$","p",null,{"children":["zod를 이용한 form validation schema는 ",["$","code",null,{"children":"isPublic: z.boolean()"}]," 대신 아래의 ",["$","code",null,{"children":"z.enum"}],"을 사용하는 코드로 수정합니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"visibility: z.enum([\"PUBLIC\", \"PRIVATE\", \"GROUP\"])\n"}]}]]}]
