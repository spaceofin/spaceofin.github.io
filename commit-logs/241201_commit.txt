3:I[9275,[],""]
5:I[1343,[],""]
6:I[5767,["231","static/chunks/231-6a7b6dfd7bcbf59a.js","185","static/chunks/app/layout-c9173ec0898b2734.js"],"PostProvider",1]
7:I[231,["231","static/chunks/231-6a7b6dfd7bcbf59a.js","185","static/chunks/app/layout-c9173ec0898b2734.js"],""]
4:["slug","241201_commit","d"]
0:["ZLfEGPF44wSU_S0CUUew-",[[["",{"children":["commit-logs",{"children":[["slug","241201_commit","d"],{"children":["__PAGE__?{\"slug\":\"241201_commit\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["commit-logs",{"children":[["slug","241201_commit","d"],{"children":["__PAGE__",{},[["$L1","$L2",null],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","commit-logs","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","commit-logs","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ec8169d84bc91095.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","$L6",null,{"children":["$","body",null,{"children":[["$","nav",null,{"className":"font-mono mx-16","children":["$","ul",null,{"className":"relative min-h-32 mt-14 mb-10 mx-2 sm:mx-12 lg:mx-14 flex flex-col md:flex-row md:space-x-12 lg:space-x-16 space-y-1 md:space-y-0 justify-center md:justify-start items-start sm:items-center md:items-center text-2xl md:text-3xl z-0 tracking-tight text-zinc-900 pl-4 sm:pl-0","children":[["$","li",null,{"children":["$","$L7",null,{"href":"/","children":"Home"}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/learning-logs","children":"Learning Logs"}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/commit-logs","children":"Commit Logs"}]}]]}]}],["$","div",null,{"className":"flex justify-center py-10","children":["$","div",null,{"className":"page-background","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}]}]]}]}]}]],null],null],[null,"$L8"]]]]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Spaceofin Logs"}],["$","meta","3",{"name":"description","content":"A blog for study logs"}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"256x256"}]]
1:null
2:["$","div",null,{"className":"flex flex-col prose dark:prose-invert w-full h-full max-h-none overflow-visible px-4","children":[["$","h1",null,{"className":"my-20 text-4xl","children":"memo creation 기능 구현하기"}],"\n",["$","h2",null,{"className":"mt-20 text-3xl text-blue-900","children":"새로운 메모 생성을 위해 필요한 것들"}],"\n",["$","p",null,{"children":["메모 생성 페이지에서 메모의 제목과 내용을 입력하고 ",["$","code",null,{"children":"Create"}]," 버튼을 클릭하면 새로운 메모가 생성되게 하려고 합니다."]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"prisma.schema"}],"에서 Memo model을 살펴봅니다.\nMemo model은 id, title, content 필드로 구성되어 있습니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"// prisma.schema\n...\nmodel Memo {\n  id    Int    @id @default(autoincrement())\n  title String\n  content  String\n}\n...\n"}]}],"\n",["$","p",null,{"children":"메모 생성 기능 구현에 필요한 구체적인 것들을 정리합니다."}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"title"}],", ",["$","code",null,{"children":"content"}]," 항목을 포함하는 클라이언트 컴포넌트의 form"]}],"\n",["$","li",null,{"children":["form 제출 시, form data를 받아서 필요한 로직을 수행하는 서버 컴포넌트 함수","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"form validation"}],"\n",["$","li",null,{"children":"create 메서드 호출을 통한 데이터 생성"}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","h2",null,{"className":"mt-20 text-3xl text-blue-900","children":"메모 생성 기능 구현하기"}],"\n",["$","h3",null,{"className":"text-2xl dark:text-2xl text-sky-700 dark:text-sky-300","children":"생성할 memo data의 form 제출 구현(client component)"}],"\n",["$","p",null,{"children":["form 제출에는 ",["$","code",null,{"children":"useActionState"}]," 리액트 훅을 사용합니다.\n형식은 아래와 같습니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"const [state, formAction, isPending] = useActionState(fn, initialState, permalink?);\n"}]}],"\n",["$","p",null,{"children":"폼의 제출 과정 중 발생하는 에러를 message 로 담아서 state로 반환하는 formAction을 구현할 것입니다.\n폼 제출 이전 초기 message는 빈 문자열입니다. initialState는 컴포넌트 렌더링과 관련이 없고 한번만 생성되면 되므로 컴포넌트 외부에 선언합니다."}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"const initialState = {\n  message: \"\",\n};\n\nexport default function MemoCreatePage() {\n  const [state, formAction] = useActionState(createMemo, initialState);    \n\n\treturn (\n\t\t<div className=\"mx-14\">\n\t\t\t<form action={formAction}>\n\t\t\t\t<h3 className=\"text-2xl mt-10 mb-6\">Add a New Memo</h3>\n\t\t\t\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t// TITLE label & input\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t// CONTENT label & input\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{state?.message ? (\n\t\t\t\t\t\t<div className=\"my-2 p-2 bg-red-200 border rounded border-red-400\">\n\t\t\t\t\t\t\t{state.message}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null }\n\t\t\t\t\t<button type=\"submit\" className=\"rounded p-2 text-xl bg-orange-200\">\n\t\t\t\t\t\tCreate\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n"}]}],"\n",["$","h3",null,{"className":"text-2xl dark:text-2xl text-sky-700 dark:text-sky-300","children":"memo creation 기능 구현(server component)"}],"\n",["$","p",null,{"children":["form validation은 ",["$","code",null,{"children":"title"}],"과 ",["$","code",null,{"children":"content"}]," 항목에 대해 각각 타입이 문자열이고 길이가 title은 50자 이하, content는 1000자 이하인지에 대해 검사합니다. validation을 통과하지 못할 경우 메모가 생성되지 않도록 message 항목을 포함하는 객체를 return 합니다."]}],"\n",["$","p",null,{"children":["새로운 메모 생성을 위해서는 ",["$","code",null,{"children":"db.memo.create"}]," 메서드를 사용합니다.\n여기에서 ",["$","code",null,{"children":"db"}],"는 아래의 코드로 생성한 ",["$","code",null,{"children":"PrismaClient"}]," 인스턴스 입니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"export const db = new PrismaClient();\n"}]}],"\n",["$","p",null,{"children":["전체적인 로직은 ",["$","code",null,{"children":"try...catch"}]," 구문으로 감싸줍니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"export async function createMemo(\n  state: { message: string },\n  formData: FormData\n) {\n  try {\n    const title = formData.get(\"title\");\n    const content = formData.get(\"content\");\n    if (typeof title !== \"string\" || title.length > 50) {\n      return {\n        message: \"Title must be 50 characters or fewer.\",\n      };\n    }\n    if (typeof content !== \"string\" || content.length > 1000) {\n      return {\n        message: \"Content must be 1000 characters or fewer.\",\n      };\n    }\n    await db.memo.create({\n      data: {\n        title,\n        content,\n      },\n    });\n  } catch (error: unknown) {\n    if (error instanceof Error) {\n      return {\n        message: error.message,\n      };\n    } else {\n      return {\n        message: \"Something went wrong...\",\n      };\n    }\n  }\n  ...\n}\n"}]}],"\n",["$","h2",null,{"className":"mt-20 text-3xl text-blue-900","children":"references"}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"https://ko.react.dev/reference/react/useActionState\n"}]}]]}]
