3:I[9275,[],""]
5:I[1343,[],""]
6:I[5767,["231","static/chunks/231-6a7b6dfd7bcbf59a.js","185","static/chunks/app/layout-c9173ec0898b2734.js"],"PostProvider",1]
7:I[231,["231","static/chunks/231-6a7b6dfd7bcbf59a.js","185","static/chunks/app/layout-c9173ec0898b2734.js"],""]
4:["slug","241115_commit","d"]
0:["cZtUrZpHfuqqAObIoEXtn",[[["",{"children":["commit-logs",{"children":[["slug","241115_commit","d"],{"children":["__PAGE__?{\"slug\":\"241115_commit\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["commit-logs",{"children":[["slug","241115_commit","d"],{"children":["__PAGE__",{},[["$L1","$L2",null],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","commit-logs","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","commit-logs","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ec8169d84bc91095.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","$L6",null,{"children":["$","body",null,{"children":[["$","nav",null,{"className":"font-mono mx-16","children":["$","ul",null,{"className":"relative min-h-32 mt-14 mb-10 mx-2 sm:mx-12 lg:mx-14 flex flex-col md:flex-row md:space-x-12 lg:space-x-16 space-y-1 md:space-y-0 justify-center md:justify-start items-start sm:items-center md:items-center text-2xl md:text-3xl z-0 tracking-tight text-zinc-900 pl-4 sm:pl-0","children":[["$","li",null,{"children":["$","$L7",null,{"href":"/","children":"Home"}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/learning-logs","children":"Learning Logs"}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/commit-logs","children":"Commit Logs"}]}]]}]}],["$","div",null,{"className":"flex justify-center py-10","children":["$","div",null,{"className":"page-background","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}]}]]}]}]}]],null],null],[null,"$L8"]]]]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Spaceofin Logs"}],["$","meta","3",{"name":"description","content":"A blog for study logs"}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"256x256"}]]
1:null
2:["$","div",null,{"className":"flex flex-col prose dark:prose-invert w-full h-full max-h-none overflow-visible px-4","children":[["$","h1",null,{"className":"my-20 text-4xl","children":"Cart feature 리팩토링"}],"\n",["$","h2",null,{"className":"mt-20 text-3xl text-blue-900","children":"리팩토링1: totalValue 계산을 slice 파일로 옮기기"}],"\n",["$","h3",null,{"className":"text-2xl dark:text-2xl text-sky-700 dark:text-sky-300","children":"코드 수정 전"}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"// Cart.tsx\n...\nexport const Cart = () => {\n  const dispatch = useAppDispatch();\n  const { items: itemList, searchTerm } = useAppSelector(selectCart);\n\n  const [itemName, setItemName] = useState<string>(\"\");\n  const [itemValue, setItemValue] = useState<number>(0);\n  const [totalValue, setTotalValue] = useState<number>(0);\n\n  useEffect(() => {\n    setTotalValue(itemList.reduce((acc, item) => acc + item.value, 0));\n  }, [itemList]);\n  ...\n}\n"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"// cartSlice.ts\n...\nexport const selectCart = ({ cart: { searchTerm, items } }: RootState) => {\n  const filteredItems = items.filter((item) =>\n    item.name.toLocaleLowerCase().includes(searchTerm.toLowerCase())\n  );\n  return { items: filteredItems, searchTerm };\n};\n...\n"}]}],"\n",["$","h3",null,{"className":"text-2xl dark:text-2xl text-sky-700 dark:text-sky-300","children":"코드 수정 후"}],"\n",["$","p",null,{"children":"useEffect 내부에서 카트 아이템의 totalValue를 계산하는 방식에서 cartSlice 내에서 totalValue 계산을 마치고 반환하는 방식으로 리팩토링하였습니다."}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"// Cart.tsx\nexport const Cart = () => {\n  const dispatch = useAppDispatch();\n  const {\n    items: itemList,\n    searchTerm,\n    totalValue,\n  } = useAppSelector(selectCart);\n  ...\n}\n"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"// cartSlice.ts\nexport const selectCart = ({ cart: { searchTerm, items } }: RootState) => {\n  const filteredItems = items.filter((item) =>\n    item.name.toLocaleLowerCase().includes(searchTerm.toLowerCase())\n  );\n  const totalValue = filteredItems.reduce((acc, item) => acc + item.value, 0);\n  return { items: filteredItems, searchTerm, totalValue };\n};\n"}]}],"\n",["$","h2",null,{"className":"mt-20 text-3xl text-blue-900","children":"리팩토링2: inputSlice를 생성하여 input 관련 상태들 관리"}],"\n",["$","h3",null,{"className":"text-2xl dark:text-2xl text-sky-700 dark:text-sky-300","children":"코드 수정 전"}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"// Cart.tsx\n...\nexport const Cart = () => {\n  ...\n  const [itemName, setItemName] = useState<string>(\"\");\n  const [itemValue, setItemValue] = useState<number>(0);\n  ...\n  \n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    if (name === \"itemName\") {\n      setItemName(value);\n    } else if (name === \"itemValue\") {\n      setItemValue(parseInt(value));\n    }\n  };\n  ...\n}\n"}]}],"\n",["$","h3",null,{"className":"text-2xl dark:text-2xl text-sky-700 dark:text-sky-300","children":"코드 수정 후"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"itemName"}],", ",["$","code",null,{"children":"itemValue"}]," 상태를 관리하는  ",["$","code",null,{"children":"itemInputSlice.ts"}]," 파일을 생성하였습니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"// itemInputSlice.ts\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\n\ninterface itemInput {\n  name: string;\n  price: number;\n}\n\nconst initialState: itemInput = { name: \"\", price: 0 };\n\nconst itemInputSlice = createSlice({\n  name: \"itemInput\",\n  initialState,\n  reducers: {\n    changeName(state, action: PayloadAction<string>) {\n      state.name = action.payload;\n    },\n    changePrice(state, action: PayloadAction<string>) {\n      state.price = parseInt(action.payload) || 0;\n    },\n  },\n});\n\nexport const { changeName, changePrice } = itemInputSlice.actions;\nexport const selectItemInput = (state: RootState) => state.itemInput;\nexport default itemInputSlice.reducer;\n\n"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"// Cart.tsx\nimport { changeName, changePrice, selectItemInput } from \"./itemInputSlice\";\n...\n\nexport const Cart = () => {\n  ...\n  const { name: itemName, price: itemPrice } = useAppSelector(selectItemInput);\n  ...\n  \n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    if (name === \"itemName\") {\n      dispatch(changeName(value));\n    } else if (name === \"itemPrice\") {\n      dispatch(changePrice(value));\n    }\n  };\n  ...\n}\n"}]}],"\n",["$","h2",null,{"className":"mt-20 text-3xl text-blue-900","children":"Trouble Shooting"}],"\n",["$","h3",null,{"className":"text-2xl dark:text-2xl text-sky-700 dark:text-sky-300","children":"Trouble: 1초마다 Cart 컴포넌트의 리렌더링이 일어나요"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"Cart"}]," 컴포넌트가 1초마다 리렌더링이 일어나는 트러블을 발견하였습니다."]}],"\n",["$","p",null,{"children":["현재 ",["$","code",null,{"children":"App"}]," 컴포넌트는 아래와 같이 여러 컴포넌트들을 모아서 렌더링하고 있는 구조입니다. 1초마다 렌더링을 일으키는 원인 컴포넌트를 찾기 위해 살펴보니 ",["$","code",null,{"children":"Clock"}]," 컴포넌트에서 초마다 리렌더링이 되는 것에 ",["$","code",null,{"children":"Cart"}]," 컴포넌트가 영향을 받고 있었습니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"export default function App() {\n  return (\n    <div>\n      <div className=\"text-2xl text-orange-400 m-10\">\n        Hello, React Redux Typescript\n      </div>\n      <Container>\n        <Counter />\n      </Container>\n      <Container>\n        <Clock />\n      </Container>\n      <Container>\n        <Weather />\n      </Container>\n      <Container>\n        <User />\n      </Container>\n      <Container>\n        <Todos />\n      </Container>\n      <Container>\n        <Cart />\n      </Container>\n    </div>\n  );\n}\n"}]}],"\n",["$","h3",null,{"className":"text-2xl dark:text-2xl text-sky-700 dark:text-sky-300","children":"Trouble 원인 찾기"}],"\n",["$","p",null,{"children":"정확히 어느 부분 때문인지 추적해보니 아래의 코드가 문제입니다."}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"// Cart.tsx\nexport const Cart = () => {\n  ...\n  const {\n    items: itemList,\n    searchTerm,\n    totalPrice,\n  } = useAppSelector(selectCart);\n  ...\n}\n"}]}],"\n",["$","p",null,{"children":["이 코드의 어느 부분이 문제인지 알아보기 위해 ",["$","code",null,{"children":"selectCart"}]," 를 정의한 ",["$","code",null,{"children":"cartSlice.ts"}]," 파일을 다시 살펴봤습니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"// cartSlice.ts\nexport const selectCart = ({ cart: { searchTerm, items } }: RootState) => {\n  const filteredItems = items.filter((item) =>\n    item.name.toLocaleLowerCase().includes(searchTerm.toLowerCase())\n  );\n  const totalPrice = filteredItems.reduce((acc, item) => acc + item.price, 0);\n  return { items: filteredItems, searchTerm, totalPrice };\n};\n"}]}],"\n",["$","p",null,{"children":["이리저리 코드를 변형해 봐도 원인을 알 수 없다가 다른 문제를 일으키지 않는 ",["$","code",null,{"children":"slice"}]," 파일들과 코드 비교를 해보니 위의 코드는 ",["$","code",null,{"children":"object"}],"를 반환하고 있었습니다."]}],"\n",["$","p",null,{"children":["자바스크립트에서 ",["$","code",null,{"children":"object"}]," 즉, 객체는 참조 타입(",["$","code",null,{"children":"reference type"}],")이며 함수의  반환 타입이 객체인 경우 매번 새로운 참조를 가지는 객체를 생성하여 반환하는 것이기 때문에 리렌더링을 유발합니다."]}],"\n",["$","h3",null,{"className":"text-2xl dark:text-2xl text-sky-700 dark:text-sky-300","children":"Trouble 해결하기: createSelector 사용한 메모이제이션(Memoization)"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"createSelect"}],"를 사용하면 입력값의 변화가 없을 때 이전에 계산된 결과를 재사용하여 불필요한 계산을 방지할 수 있습니다. 즉, 동일한 입력값에 대해서는 캐시된 결과를 사용하기 때문에 return 하는 객체의 참조가 변하지 않아 리렌더링이 유발되지 않습니다."]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"createSeletor"}],"를 사용하여 ",["$","code",null,{"children":"selectCart"}]," 코드 부분을 리팩토링하였습니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"// cartSlice.ts\n...\nexport const selectCart = createSelector(\n  [\n    (state: RootState) => state.cart.items,\n    (state: RootState) => state.cart.searchTerm,\n  ],\n  (items, searchTerm) => {\n    const filteredItems = items.filter((item) =>\n      item.name.toLocaleLowerCase().includes(searchTerm.toLowerCase())\n    );\n    const totalPrice = filteredItems.reduce((acc, item) => acc + item.price, 0);\n    return { items: filteredItems, searchTerm, totalPrice };\n  }\n);\n...\n"}]}],"\n",["$","p",null,{"children":"더 이상 불필요한 리렌더링이 유발되지 않습니다."}],"\n",["$","h2",null,{"className":"mt-20 text-3xl text-blue-900","children":"references"}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"https://redux-toolkit.js.org/api/createSelector\nhttps://github.com/reduxjs/reselect\nhttps://redux.js.org/usage/deriving-data-selectors#optimizing-selectors-with-memoization\n"}]}]]}]
